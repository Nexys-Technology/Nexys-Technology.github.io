<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[Category: docker | Nexys Technology]]></title>
    <link href="http://nexys-technology.github.io/blog/categories/docker/atom.xml" rel="self"/>
    <link href="http://nexys-technology.github.io/"/>
    <updated>2015-08-12T12:06:59+02:00</updated>
    <id>http://nexys-technology.github.io/</id>
    <author>
        <name><![CDATA[Nexys Consulting]]></name>
        
      </author>
    <generator uri="http://octopress.org/">Octopress</generator>

    
    <entry>
        <title type="html"><![CDATA[Docker, Kafka, Storm et Hadoop HDFS 1]]></title>
        <link href="http://nexys-technology.github.io/hadoop/docker/kafka/storm/Docker-Kafka-Storm-HDFS/"/>
        <updated>2015-08-12T00:00:00+02:00</updated>
        <id>http://nexys-technology.github.io/hadoop/docker/kafka/storm/Docker-Kafka-Storm-HDFS</id>
        <content type="html"><![CDATA[<p>Le but de cete suite de posts est de décrire l’installation d’un environnement fonctionnel de Kafka, Storm &amp; Hadoop avec docker.
Nous utiliserons la version 1.8 de docker avec graylog 2 pour la centralisation des logs entre les containers</p>

<h2 id="initialisation-de-lenvironnement-docker">Initialisation de l’environnement Docker</h2>

<ul>
  <li>Télécharger DockerToolbox: <a href="https://www.docker.com/toolbox">DockerToolbox</a></li>
  <li>Installer l’application en executer le programme d’installation</li>
  <li>Lancer le shell Docker Quickstart Terminal ou dans le cas d’un shell existant</li>
  <li>ou lancer la commande suivante dans un shell existant pour initialiser les variables d’nevironnements docker: <code>eval $(docker-machine env default --shell=zsh)</code> (changer le zsh en bash en fonction de votre shell)</li>
</ul>

<p>Vérifier que docker fonctionne correctement:</p>

<p>``` bash
$ docker version
Client:
 Version:      1.8.0
 API version:  1.20
 Go version:   go1.4.2
 Git commit:   0d03096
 Built:        Tue Aug 11 17:17:40 UTC 2015
 OS/Arch:      darwin/amd64</p>

<p>Server:
 Version:      1.8.0
 API version:  1.20
 Go version:   go1.4.2
 Git commit:   0d03096
 Built:        Tue Aug 11 17:17:40 UTC 2015
 OS/Arch:      linux/amd64</p>

<p>```</p>

<h2 id="cration-dun-machine-virtuel-avec-docker-machine">Création d’un machine virtuel avec docker-machine</h2>

<p>Nous allons récréer la VM default avece 4G de Ram et 60Gb de disque:</p>

<p><code>bash
$ docker-machine stop default
$ docker-machine rm default
$ docker-machine create -d virtualbox --virtualbox-memory 4096 --virtualbox-disk-size 60000 default
$ eval $($DOCKER_MACHINE env default --shell=zsh)
$ docker-machine ls
NAME      ACTIVE   DRIVER       STATE     URL                         SWARM
default   *        virtualbox   Running   tcp://192.168.99.101:2376
$
</code></p>

<h2 id="cration-du-container-graylog-pour-centraliser-les-logs">Création du container Graylog pour centraliser les logs</h2>

<p>Nous allons utiliser Graylog 2 pour centraliser les logs des difféerents containers:</p>

<p><code>bash
docker run -t -p 19000:9000 -p 12201:12201 graylog2/allinone
</code></p>

]]></content>
    </entry>
    
</feed>
